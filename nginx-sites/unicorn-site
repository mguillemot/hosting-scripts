upstream XXXXXX {
	server unix:/var/run/unicorn/XXXXXX.socket fail_timeout=0;
}

server {
	listen      80;
	server_name XXXXXX.com;

	# Uncomment for SSL access:
	#
	#listen 443 ssl;
	#ssl_certificate      /etc/nginx/ssl/XXXXXX.crt;
	#ssl_certificate_key  /etc/nginx/ssl/XXXXXX.key;
	#ssl_protocols        SSLv3 TLSv1;
	#ssl_ciphers          HIGH:!ADH:!MD5;

	access_log  /var/log/nginx/XXXXXX.access.log;
	rewrite_log on;

	location / {
		proxy_pass         http://XXXXXX;
		proxy_redirect     off;

		proxy_set_header   Host             $host;
		proxy_set_header   X-Real-IP        $remote_addr;
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

		client_max_body_size       10m;
		client_body_buffer_size    128k;

		proxy_connect_timeout      90;
		proxy_send_timeout         90;
		proxy_read_timeout         90;

		proxy_buffer_size          4k;
		proxy_buffers              4 32k;
		proxy_busy_buffers_size    64k;
		proxy_temp_file_write_size 64k;
	}

	# if the request is for a static resource, nginx should serve it directly
	# and add a far future expires header to it, making the browser
	# cache the resource and navigate faster over the website
	location ~ ^/(images|javascripts|stylesheets|system|swf|fonts|assets)/  {
		root /home/rakeapps/XXXXXX/public;
		expires max;
		break;
	}

	location /favicon.ico {
		alias /home/rakeapps/XXXXXX/public/favicon.ico;
		expires max;
		break;
	}
}